name: "Foundry OKD: Update Client/App Images & Deploy Helm Release"

on:
  push:
    branches:
      - NR-BCWAT-40/cicd
    # paths:
    #   - client/**
    #   - backend/**
    #   - charts/app/**
  workflow_dispatch:

jobs:
  bump_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version_bump.outputs.newTag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name:  'Automated Version Bump'
        uses:  'phips28/gh-action-bump-version@master'
        id: version_bump
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR: client

  build_push_nginx:
    runs-on: ubuntu-latest
    needs: bump_version
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Azure Login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build And Push NGINX Test Image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: true
          tags: ${{ secrets.ACR_REGISTRY }}/bcwat/nginx:latest, ${{ secrets.ACR_REGISTRY }}/bcwat/nginx:${{ needs.bump_version.outputs.version }}
          build-args: |
            VITE_APP_MAPBOX_TOKEN=${{ secrets.FOUNDRY_MAPBOX_TOKEN }}
            VITE_BASE_API_URL=http://bcwatertool.fspatial/api

  build_push_api:
    runs-on: ubuntu-latest
    needs: bump_version
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Azure Login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build And Push NGINX Test Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.ACR_REGISTRY }}/bcwat/api:latest, ${{ secrets.ACR_REGISTRY }}/bcwat/api:${{ needs.bump_version.outputs.version }}

  # build_push_airflow:
  #   runs-on: ubuntu-latest
  #   needs: bump_version
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         ref: master

  #     - name: 'Azure Login'
  #       uses: azure/docker-login@v1
  #       with:
  #         login-server: ${{ secrets.ACR_REGISTRY }}
  #         username: ${{ secrets.ACR_USERNAME }}
  #         password: ${{ secrets.ACR_PASSWORD }}

  #     - name: Build And Push NGINX Test Image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./airflow
  #         push: true
  #         tags: ${{ secrets.ACR_REGISTRY }}/bcwat/airflow:latest, ${{ secrets.ACR_REGISTRY }}/bcwat/airflow:${{ needs.bump_version.outputs.version }}

  helm_release_application:
    runs-on: ubuntu-latest
    needs:
      - bump_version
      - build_push_nginx
      - build_push_api
    steps:
      # Connect to OnPrem WG
      - name: Checkout
        uses: actions/checkout@v4

      # Connect to OnPrem WG
      - name: Set up WireGuard Connection
        uses: niklaskeerl/easy-wireguard-action@v2
        with:
          WG_CONFIG_FILE: ${{ secrets.FOUNDRY_ONPREM_WG_CONF }}

      # Install OC CLI - Despite OC Login Action specifying OC is installed
      # for Ubuntu Runners, this fails without the install:
      # --------------------------------
      # Run redhat-actions/oc-login@v1
      # Authenticating using token
      # Error: Error: Unable to locate executable file: oc. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.
      # -------------
      - name: Install oc CLI
        run: |
          curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz
          tar -xvf openshift-client-linux.tar.gz oc
          sudo mv oc /usr/local/bin

      - name: Install Helm CLI
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      # This is for onPrem only
      # BC Gov Actions will use the OC Runner Action:
      # bcgov/action-oc-runner@5882b707c20135424f62202f80d56c1d243fd96c
      - name: Authenticate to OKD and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OKD_SERVER }}
          openshift_token: ${{ secrets.FOUNDRY_OKD_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: bcwat

      - name: Helm Upgrade Application
        run: |
          helm upgrade --install bcwat ./app \
            --namespace bcwat \
            --atomic \
            -f values.base.yaml \
            -f values.okd.yaml \
            --set backend.image=${{ secrets.ACR_REGISTRY }}/bcwat/api:${{ needs.bump_version.outputs.version }} \
            --set client.image=${{ secrets.ACR_REGISTRY }}/bcwat/nginx:${{ needs.bump_version.outputs.version }}

  # helm_release_airflow:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - bump_version
  #     - build_push_airflow
  #   steps:
  #     # Connect to OnPrem WG
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         ref: master

  #     # Connect to OnPrem WG
  #     - name: Set up WireGuard Connection
  #       uses: niklaskeerl/easy-wireguard-action@v2
  #       with:
  #         WG_CONFIG_FILE: ${{ secrets.FOUNDRY_ONPREM_WG_CONF }}

  #     # Install OC CLI - Despite OC Login Action specifying OC is installed
  #     # for Ubuntu Runners, this fails without the install:
  #     # --------------------------------
  #     # Run redhat-actions/oc-login@v1
  #     # Authenticating using token
  #     # Error: Error: Unable to locate executable file: oc. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.
  #     # -------------
  #     - name: Install oc CLI
  #       run: |
  #         curl -LO https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz
  #         tar -xvf openshift-client-linux.tar.gz oc
  #         sudo mv oc /usr/local/bin

  #     # This is for onPrem only
  #     # BC Gov Actions will use the OC Runner Action:
  #     # bcgov/action-oc-runner@5882b707c20135424f62202f80d56c1d243fd96c
  #     - name: Authenticate to OKD and set context
  #       uses: redhat-actions/oc-login@v1
  #       with:
  #         openshift_server_url: ${{ secrets.OKD_SERVER }}
  #         openshift_token: ${{ secrets.FOUNDRY_OKD_TOKEN }}
  #         insecure_skip_tls_verify: true
  #         namespace: bcwat

  #     - name: 'Deploy'
  #       uses: 'deliverybot/helm@v1'
  #       with:
  #         release: 'airflow'
  #         namespace: 'bcwat'
  #         chart: 'airflow'
  #         token: '${{ github.token }}'
  #         value-files: >-
  #           [
  #             "values.base.yaml",
  #             "values.okd.yaml"
  #           ]
  #         values: |
  #           images:
  #             airflow:
  #               tag: ${{ needs.bump_version.outputs.version }}



