executor: KubernetesExecutor

extraSecrets:
  airflow-flowworks-credentials:
    type: Opaque
    stringData: |
      BCWAT_FLOWWORKS_PASSWORD: "{{ .Values.secrets.bcwatFlowworks.password }}"
      BCWAT_FLOWWORKS_USERNAME: "{{ .Values.secrets.bcwatFlowworks.username }}"
  airflow-fernet-key:
    type: Opaque
    stringData: |
      fernet-key: "{{ .Values.secrets.fernet.key }}"
  airflow-database-connection:
    type: Opaque
    stringData: |
      connection: "{{ .Values.secrets.database.connection }}"
  airflow_conn_bcwat_db:
    type: Opaque
    stringData: |
      uri: "{{ (lookup "v1" "Secret" .Release.Namespace "bcwat-db-pguser-bcwat-airflow-read-write").data."pgbouncer-uri" | b64dec }}"

# We are manaully creating a fernet-key before initializing Airflow.
fernetKeySecretName: bcwat-airflow-fernet-key

# Airflow database config
# Requires Airflow-metadata secret to have been created, pointing to the external database handling airflow metadata info
data:
  metadataSecretName: bcwat-airflow-metadata
  resultBackendSecretName: bcwat-airflow-metadata

registry:
  secretName: acr-pull-secret

images:
  airflow:
    repository: foundrymainregistry.azurecr.io/bcwat/airflow
    tag: latest
    pullPolicy: Always

migrateDatabaseJob:
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  ttlSecondsAfterFinished: 180

createUserJob:
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  ttlSecondsAfterFinished: 180

redis:
  enabled: false

postgresql:
  enabled: false

flower:
  enabled: false

statsd:
  enabled: false

dags:
  persistence:
    enabled: false

# Requires Existing Storage Class Created (handled by FLUX CD - INFRA)
logs:
  persistence:
    enabled: true
    storageClassName: airflow

webserver:
  env:
    - name: AIRFLOW_CONN_BCWAT_DB
      valueFrom:
        secretKeyRef:
          name: airflow_conn_bcwat_db
          key: uri
  waitForMigrations:
    enabled: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

scheduler:
  env:
    - name: AIRFLOW_CONN_BCWAT_DB
      valueFrom:
        secretKeyRef:
          name: airflow_conn_bcwat_db
          key: uri
  waitForMigrations:
    enabled: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault

triggerer:
  env:
    - name: AIRFLOW_CONN_BCWAT_DB
      valueFrom:
        secretKeyRef:
          name: airflow_conn_bcwat_db
          key: uri
  persistence:
    enabled: false
  waitForMigrations:
    enabled: false
  securityContext:
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
