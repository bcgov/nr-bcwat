apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.backend.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.backend.name }}
    project: {{ .Values.global.project }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.backend.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.name }}
        project: {{ .Values.global.project }}
    spec:
      {{- if .Values.backend.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.backend.imagePullSecret }}
      {{- end }}
      initContainers:
        - name: {{ .Values.backend.name }}-init
          image: {{ .Values.migrations.image }}
          imagePullPolicy: Always
          env:
          - name: FLYWAY_URL
            valueFrom:
              secretKeyRef:
                name: {{ .Values.migrations.secret }}
                key: jdbc-uri
          - name: FLYWAY_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.migrations.secret }}
                key: user
          - name: FLYWAY_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.migrations.secret }}
                key: password
          resources:
            requests:
              cpu: 50m
              memory: 75Mi
      containers:
        - name: {{ .Values.backend.name }}
          image: {{ .Values.backend.image }}
          imagePullPolicy: Always
          # TODO: Init External Secrets Operator
          env:
            - name: FLASK_ENV
              value: {{ .Values.backend.env.FLASK_ENV }}
            - name: CLIENT_URL
              value: {{ .Values.backend.env.CLIENT_URL }}
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.migrations.secret }}
                  key: pgbouncer-host
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.migrations.secret }}
                  key: dbname
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.migrations.secret }}
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.migrations.secret }}
                  key: password
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.migrations.secret }}
                  key: port
          ports:
            - containerPort: 8000
          resources:
            requests:
              cpu: 500m
              memory: 1G
            limits:
              cpu: 500m
              memory: 1G
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: polars-unsafe # OKD worker0 (should not impact BC Government Openshift)
                    operator: NotIn
                    values:
                      - "true"
