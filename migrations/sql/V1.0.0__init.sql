    CREATE SCHEMA bcwat_lic;

    CREATE TABLE bcwat_lic.lake_license (
        waterbody_poly_id integer,
        lake_name text DEFAULT '',
        lake_licence_id text DEFAULT '',
        licence_stream_name text DEFAULT '',
        PRIMARY KEY (waterbody_poly_id, lake_licence_id)
    );

    CREATE TABLE bcwat_lic.bc_wls_water_approval (
        water_approval_id text PRIMARY KEY DEFAULT '',
        wsd_region text DEFAULT '',
        approval_type text DEFAULT '',
        approval_file_number text DEFAULT '',
        source text DEFAULT '',
        works_description text DEFAULT '',
        quantity DOUBLE PRECISION,
        quantity_units text DEFAULT '',
        qty_diversion_max_rate DOUBLE PRECISION,
        qty_units_diversion_max_rate text DEFAULT '',
        water_district text DEFAULT '',
        precinct text DEFAULT '',
        approval_status text DEFAULT '',
        application_date date,
        fcbc_acceptance_date date,
        approval_issuance_date date,
        approval_start_date date,
        approval_expiry_date date,
        geom geometry(Point,4326) NOT NULL,
        proponent text DEFAULT '',
        qty_display text DEFAULT '',
        podno text DEFAULT ''
    );

    CREATE TABLE bcwat_lic.bc_wls_wrl_wra (
        wls_wrl_wra_id text PRIMARY KEY DEFAULT '',
        licence_no varchar(16) UNIQUE NOT NULL DEFAULT '',
        tpod_tag varchar(10) UNIQUE NOT NULL DEFAULT '',
        purpose text UNIQUE NOT NULL DEFAULT '',
        pcl_no varchar(15) UNIQUE NOT NULL DEFAULT '',
        qty_original DOUBLE PRECISION,
        qty_flag varchar(1) DEFAULT '',
        qty_units varchar(25) DEFAULT '',
        licensee varchar NOT NULL DEFAULT '',
        lic_status_date date,
        priority_date date,
        expiry_date date,
        longitude DOUBLE PRECISION,
        latitude DOUBLE PRECISION,
        stream_name varchar DEFAULT '',
        quantity_day_m3 DOUBLE PRECISION,
        quantity_sec_m3 DOUBLE PRECISION,
        quantity_ann_m3 DOUBLE PRECISION,
        lic_status text DEFAULT '',
        rediversion_flag varchar(1) DEFAULT '',
        flag_desc varchar(100) DEFAULT '',
        file_no varchar(10) DEFAULT '',
        water_allocation_type varchar(2) NOT NULL DEFAULT '',
        geom geometry(Point,4326),
        water_source_type_desc text DEFAULT '',
        hydraulic_connectivity varchar(215) DEFAULT '',
        well_tag_number DOUBLE PRECISION,
        related_licences text[] DEFAULT array[]::text[],
        industry_activity text NOT NULL DEFAULT '',
        purpose_groups text NOT NULL DEFAULT '',
        is_consumptive boolean NOT NULL,
        ann_adjust DOUBLE PRECISION,
        documentation json,
        qty_display text DEFAULT '',
        puc_groupings_storage text DEFAULT '',
        date_updated timestamptz
    );

    CREATE TABLE bcwat_lic.licence_ogc_short_term_approval (
        short_term_approval_id text PRIMARY KEY,
        pod_number text DEFAULT '',
        short_term_water_use_num text DEFAULT '',
        water_source_type text DEFAULT '',
        water_source_type_desc text DEFAULT '',
        water_source_name text DEFAULT '',
        purpose text DEFAULT '',
        purpose_desc text DEFAULT '',
        approved_volume_per_day integer,
        approved_total_volume integer,
        approved_start_date date,
        approved_end_date date,
        status text DEFAULT '',
        application_determination_num text DEFAULT '',
        activity_approval_date date,
        activity_cancel_date date,
        legacy_ogc_file_number text DEFAULT '',
        proponent text NOT NULL DEFAULT '',
        authority_type text DEFAULT '',
        land_type text DEFAULT '',
        data_source text DEFAULT '',
        geom geometry(Point,4326),
        latitude DOUBLE PRECISION,
        longitude DOUBLE PRECISION,
        is_consumptive boolean,
        qty_display text DEFAULT ''
    );

    CREATE TABLE bcwat_lic.elevation_bookend (
        elevation_flat DOUBLE PRECISION[],
        elevation_steep DOUBLE PRECISION[]
    );

    CREATE TABLE bcwat_lic.hypsometric_elevation_rollup (
        watershed_feature_id integer PRIMARY KEY,
        elevs DOUBLE PRECISION[]
    );

    CREATE TABLE bcwat_lic.bc_data_import_date (
        dataset text PRIMARY KEY,
        import_date date,
        description text DEFAULT ''
    );

    CREATE TABLE bcwat_lic.wls_water_approval (
        wls_water_approval_id text DEFAULT '',
        objectid integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        water_approval_id integer,
        wsd_region varchar(20) DEFAULT '',
        approval_type varchar(25) DEFAULT '',
        approval_file_number varchar(15) DEFAULT '',
        fcbc_tracking_number integer,
        source varchar(255) DEFAULT '',
        works_description varchar(255) DEFAULT '',
        quantity varchar(255) DEFAULT '',
        water_district varchar(30) DEFAULT '',
        precinct varchar(40) DEFAULT '',
        latitude DOUBLE PRECISION,
        longitude DOUBLE PRECISION,
        utm_zone smallint,
        utm_easting integer,
        utm_northing integer,
        map_sheet varchar(20) DEFAULT '',
        approval_status varchar(20) DEFAULT '',
        application_date timestamptz,
        fcbc_acceptance_date timestamptz,
        approval_issuance_date timestamptz,
        approval_start_date timestamptz,
        approval_expiry_date timestamptz,
        approval_refuse_abandon_date timestamptz,
        geom geometry(Point,4326)
    );

    -- COMMENTS --

    COMMENT ON SCHEMA bcwat_lic IS 'The full name of this schema is bcwat_licence. This is where all the DataBC water licencing data gets scraped to and served to the frontend.';

    -- FOREIGN KEYS --

    ALTER TABLE bcwat_lic.lake_license ADD CONSTRAINT lake_licence_waterbody_poly_id_fkey FOREIGN KEY (waterbody_poly_id) REFERENCES bcwat_ws.lake (waterbody_poly_id);

    ALTER TABLE bcwat_lic.hypsometric_elevation_rollup ADD CONSTRAINT hypsometric_elevation_rollup_watershed_feature_id_fkey FOREIGN KEY (watershed_feature_id) REFERENCES bcwat_ws.fwa_fund (watershed_feature_id);


    CREATE SCHEMA bcwat_obs;

    -- TABLE CREATION --

    CREATE TABLE bcwat_obs.station (
        station_id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        original_id text UNIQUE NOT NULL,
        station_name text NOT NULL,
        stream_name text DEFAULT '',
        station_description text DEFAULT '',
        station_status_id integer,
        operation_id integer,
        longitude DOUBLE PRECISION NOT NULL,
        latitude DOUBLE PRECISION NOT NULL,
        geom4326 geometry NOT NULL,
        drainage_area DOUBLE PRECISION,
        scrape bool NOT NULL DEFAULT true,
        regulated bool NOT NULL DEFAULT false,
        user_flag bool NOT NULL DEFAULT false
    );

    CREATE TABLE bcwat_obs.network (
        network_id smallint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        network_name text NOT NULL,
        licence_link text DEFAULT '',
        description text DEFAULT '',
        redistribute boolean NOT NULL DEFAULT false,
        provided_qa boolean NOT NULL DEFAULT false,
        network_type varchar(2)
    );

    CREATE TABLE bcwat_obs.station_type (
        type_id smallint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        type_name text NOT NULL,
        type_description text DEFAULT ''
    );

    CREATE TABLE bcwat_obs.station_type_id (
        station_id bigint,
        type_id smallint,
        PRIMARY KEY (station_id, type_id)
    );

    CREATE TABLE bcwat_obs.station_status (
        status_id smallint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        status_name text NOT NULL
    );

    CREATE TABLE bcwat_obs.operation (
        operation_id smallint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        operation_name text,
        description text
    );

    CREATE TABLE bcwat_obs.variable (
        variable_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        variable_name text,
        variable_description text DEFAULT '',
        display_name text NOT NULL,
        cell_method text,
        unit text
    );

    CREATE TABLE bcwat_obs.station_variable (
        station_id bigint,
        variable_id smallint,
        PRIMARY KEY (station_id, variable_id)
    );

    CREATE TABLE bcwat_obs.station_year (
        station_id bigint,
        year integer,
        PRIMARY KEY (station_id, year)
    );

    CREATE TABLE bcwat_obs.qa_type (
        qa_type_id smallint PRIMARY KEY,
        qa_type_name text NOT NULL
    );

    CREATE TABLE bcwat_obs.station_network_id (
        station_id bigint,
        network_id smallint,
        PRIMARY KEY (station_id, network_id)
    );

    CREATE TABLE bcwat_obs.water_discharge (
        station_id bigint,
        variable_id smallint NOT NULL,
        datestamp date,
        value DOUBLE PRECISION,
        qa_id integer,
        PRIMARY KEY (station_id, datestamp)
    );

    CREATE TABLE bcwat_obs.water_level (
        station_id bigint,
        variable_id smallint NOT NULL,
        datestamp date,
        value DOUBLE PRECISION,
        qa_id integer,
        PRIMARY KEY (station_id, datestamp)
    );

    CREATE TABLE bcwat_obs.ground_water_level (
        station_id bigint,
        variable_id smallint NOT NULL,
        datestamp date,
        value DOUBLE PRECISION,
        qa_id integer,
        PRIMARY KEY (station_id, datestamp)
    );

    CREATE TABLE bcwat_obs.climate_temperature (
        station_id bigint,
        variable_id smallint,
        datestamp date,
        value DOUBLE PRECISION,
        qa_id integer,
        PRIMARY KEY (station_id, variable_id, datestamp)
    );

    CREATE TABLE bcwat_obs.climate_precipitation (
        station_id bigint,
        variable_id smallint NOT NULL,
        datestamp date,
        value DOUBLE PRECISION,
        qa_id integer,
        PRIMARY KEY (station_id, datestamp, variable_id)
    );

    CREATE TABLE bcwat_obs.climate_snow_depth (
        station_id bigint,
        variable_id smallint NOT NULL,
        datestamp date,
        value DOUBLE PRECISION,
        qa_id integer,
        PRIMARY KEY (station_id, datestamp)
    );

    CREATE TABLE bcwat_obs.climate_swe (
        station_id bigint,
        variable_id smallint NOT NULL,
        datestamp date,
        value DOUBLE PRECISION,
        qa_id integer,
        PRIMARY KEY (station_id, datestamp)
    );

    CREATE TABLE bcwat_obs.climate_snow_amount (
        station_id bigint,
        variable_id smallint NOT NULL,
        datestamp date,
        value DOUBLE PRECISION,
        qa_id integer,
        PRIMARY KEY (station_id, datestamp)
    );

    CREATE TABLE bcwat_obs.climate_msp (
        station_id bigint,
        variable_id smallint NOT NULL,
        survey_period date,
        datestamp date NOT NULL,
        value DOUBLE PRECISION,
        qa_id integer,
        PRIMARY KEY (station_id, survey_period, variable_id)
    );

    CREATE TABLE bcwat_obs.extreme_flow (
        station_id bigint,
        value DOUBLE PRECISION,
        variable_id smallint,
        PRIMARY KEY (station_id, variable_id)
    );

    CREATE TABLE bcwat_obs.climate_wind (
        station_id bigint,
        variable_id smallint NOT NULL,
        datestamp date,
        value DOUBLE PRECISION,
        qa_id integer,
        PRIMARY KEY (station_id, datestamp, variable_id)
    );

    CREATE TABLE bcwat_obs.flow_metrics (
        station_id bigint PRIMARY KEY,
        ipf_200 DOUBLE PRECISION,
        ipf_100 DOUBLE PRECISION,
        ipf_50 DOUBLE PRECISION,
        ipf_25 DOUBLE PRECISION,
        ipf_20 DOUBLE PRECISION,
        ipf_10 DOUBLE PRECISION,
        ipf_5 DOUBLE PRECISION,
        ipf_2 DOUBLE PRECISION,
        ipf_1 DOUBLE PRECISION,
        ipf_1_01 DOUBLE PRECISION,
        ipf_yr DOUBLE PRECISION,
        amfh_200 DOUBLE PRECISION,
        amfh_100 DOUBLE PRECISION,
        amfh_50 DOUBLE PRECISION,
        amfh_25 DOUBLE PRECISION,
        amfh_20 DOUBLE PRECISION,
        amfh_10 DOUBLE PRECISION,
        amfh_5 DOUBLE PRECISION,
        amfh_2 DOUBLE PRECISION,
        amfh_1 DOUBLE PRECISION,
        amfh_1_01 DOUBLE PRECISION,
        amfh_yr DOUBLE PRECISION,
        amfl_200 DOUBLE PRECISION,
        amfl_100 DOUBLE PRECISION,
        amfl_50 DOUBLE PRECISION,
        amfl_25 DOUBLE PRECISION,
        amfl_20 DOUBLE PRECISION,
        amfl_10 DOUBLE PRECISION,
        amfl_5 DOUBLE PRECISION,
        amfl_2 DOUBLE PRECISION,
        amfl_1 DOUBLE PRECISION,
        amfl_1_01 DOUBLE PRECISION,
        amfl_yr DOUBLE PRECISION,
        js_7df_200 DOUBLE PRECISION,
        js_7df_100 DOUBLE PRECISION,
        js_7df_50 DOUBLE PRECISION,
        js_7df_25 DOUBLE PRECISION,
        js_7df_20 DOUBLE PRECISION,
        js_7df_10 DOUBLE PRECISION,
        js_7df_5 DOUBLE PRECISION,
        js_7df_2 DOUBLE PRECISION,
        js_7df_1 DOUBLE PRECISION,
        js_7df_1_01 DOUBLE PRECISION,
        js_7df_yr DOUBLE PRECISION,
        ann_7df_200 DOUBLE PRECISION,
        ann_7df_100 DOUBLE PRECISION,
        ann_7df_50 DOUBLE PRECISION,
        ann_7df_25 DOUBLE PRECISION,
        ann_7df_20 DOUBLE PRECISION,
        ann_7df_10 DOUBLE PRECISION,
        ann_7df_5 DOUBLE PRECISION,
        ann_7df_2 DOUBLE PRECISION,
        ann_7df_1 DOUBLE PRECISION,
        ann_7df_1_01 DOUBLE PRECISION,
        ann_7df_yr DOUBLE PRECISION
    );

    CREATE TABLE bcwat_obs.exclude_reason (
        exclude_id smallint PRIMARY KEY,
        exclude_description text DEFAULT ''
    );

    CREATE TABLE bcwat_obs.wsc_station_year_exclude (
        station_id bigint,
        dateyear date,
        exclude_id integer DEFAULT 0,
        PRIMARY KEY (station_id, dateyear, exclude_id)
    );

    CREATE TABLE bcwat_obs.water_quality_hourly (
        station_id bigint,
        datetimestamp timestamptz,
        result_text text NOT NULL,
        qa_id smallint NOT NULL DEFAULT 0,
        parameter_id integer,
        unit text,
        PRIMARY KEY (station_id, datetimestamp, parameter_id, unit)
    );

    CREATE TABLE bcwat_obs.climate_hourly (
        station_id bigint,
        variable_id smallint,
        datetimestamp timestamptz,
        val DOUBLE PRECISION,
        qa_id smallint,
        PRIMARY KEY (station_id, variable_id, datetimestamp)
    );

    CREATE TABLE bcwat_obs.water_quality_data (
        station_id bigint,
        datetimestamp timestamptz,
        parameter_id integer,
        quantity text DEFAULT 0,
        unit text,
        PRIMARY KEY (station_id, datetimestamp, parameter_id, unit)
    );

    CREATE TABLE bcwat_obs.water_quality_parameter_grouping (
        grouping_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        grouping_name text DEFAULT '',
        parent_group text DEFAULT '',
        child_group text DEFAULT ''
    );

    CREATE TABLE bcwat_obs.water_quality_parameter (
        parameter_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        grouping_id integer,
        parameter_name text NOT NULL,
        parameter_desc text DEFAULT ''
    );

    CREATE TABLE bcwat_obs.water_quality_user_data (
        station_id bigint,
        datetimestamp timestamptz,
        param_name text,
        units text,
        value DOUBLE PRECISION NOT NULL,
        result_letter text DEFAULT '',
        parameter_code_units text DEFAULT '',
        result_text text DEFAULT '',
        PRIMARY KEY (station_id, datetimestamp, param_name, units)
    );

    CREATE TABLE bcwat_obs.region (
        region_id smallint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
        region_name text,
        region_click_studyarea geometry(MultiPolygon, 4326),
        region_studyarea_allfunds geometry(MultiPolygon, 4326)
    );

    CREATE TABLE bcwat_obs.station_region (
        station_id bigint,
        region_id smallint,
        PRIMARY KEY (station_id, region_id)
    );

    CREATE TABLE bcwat_obs.project_id (
        project_id smallint PRIMARY KEY,
        project_name text
    );

    CREATE TABLE bcwat_obs.station_project_id (
        station_id bigint,
        project_id smallint,
        PRIMARY KEY (station_id, project_id)
    );

    CREATE TABLE bcwat_obs.bc_boundary (
        gid integer PRIMARY KEY,
        geom4326 geometry(Polygon, 4326)
    );

    -- COMMENTS --

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ipf_200 IS 'Instantaneous Peak Flow (m3/s) 200yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ipf_100 IS 'Instantaneous Peak Flow (m3/s) 100yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ipf_50 IS 'Instantaneous Peak Flow (m3/s) 50yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ipf_25 IS 'Instantaneous Peak Flow (m3/s) 25yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ipf_20 IS 'Instantaneous Peak Flow (m3/s) 20yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ipf_10 IS 'Instantaneous Peak Flow (m3/s) 10yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ipf_5 IS 'Instantaneous Peak Flow (m3/s) 5yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ipf_2 IS 'Instantaneous Peak Flow (m3/s) 2yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ipf_1 IS 'Instantaneous Peak Flow (m3/s) 1yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ipf_1_01 IS 'Instantaneous Peak Flow (m3/s) 1.01yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ipf_yr IS 'Instantaneous Peak Flow (m3/s) Years of Data';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfh_200 IS 'Annual Mean Flow (high, m3/s) 200yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfh_100 IS 'Annual Mean Flow (high, m3/s) 100yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfh_50 IS 'Annual Mean Flow (high, m3/s) 50yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfh_25 IS 'Annual Mean Flow (high, m3/s) 25yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfh_20 IS 'Annual Mean Flow (high, m3/s) 20yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfh_10 IS 'Annual Mean Flow (high, m3/s) 10yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfh_5 IS 'Annual Mean Flow (high, m3/s) 5yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfh_2 IS 'Annual Mean Flow (high, m3/s) 2yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfh_1 IS 'Annual Mean Flow (high, m3/s) 1yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfh_1_01 IS 'Annual Mean Flow (high, m3/s) 1.01yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfh_yr IS 'Annual Mean Flow (high, m3/s) Years of Data';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfl_200 IS 'Annual Mean Fow (low, m3/s) 200yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfl_100 IS 'Annual Mean Fow (low, m3/s) 100yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfl_50 IS 'Annual Mean Fow (low, m3/s) 50yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfl_25 IS 'Annual Mean Fow (low, m3/s) 25yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfl_20 IS 'Annual Mean Fow (low, m3/s) 20yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfl_10 IS 'Annual Mean Fow (low, m3/s) 10yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfl_5 IS 'Annual Mean Fow (low, m3/s) 5yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfl_2 IS 'Annual Mean Fow (low, m3/s) 2yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfl_1 IS 'Annual Mean Fow (low, m3/s) 1yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfl_1_01 IS 'Annual Mean Fow (low, m3/s) 1.01yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.amfl_yr IS 'Annual Mean Fow (low, m3/s) Years of Data';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.js_7df_200 IS 'June to September 7-Day Low Flow (m3/s) 200yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.js_7df_100 IS 'June to September 7-Day Low Flow (m3/s) 100yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.js_7df_50 IS 'June to September 7-Day Low Flow (m3/s) 50yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.js_7df_25 IS 'June to September 7-Day Low Flow (m3/s) 25yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.js_7df_20 IS 'June to September 7-Day Low Flow (m3/s) 20yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.js_7df_10 IS 'June to September 7-Day Low Flow (m3/s) 10yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.js_7df_5 IS 'June to September 7-Day Low Flow (m3/s) 5yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.js_7df_2 IS 'June to September 7-Day Low Flow (m3/s) 2yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.js_7df_1 IS 'June to September 7-Day Low Flow (m3/s) 1yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.js_7df_1_01 IS 'June to September 7-Day Low Flow (m3/s) 1.01yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.js_7df_yr IS 'June to September 7-Day Low Flow (m3/s) Years of Data';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ann_7df_200 IS 'Annual 7-day Low Flow (m3/s) 200yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ann_7df_100 IS 'Annual 7-day Low Flow (m3/s) 100yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ann_7df_50 IS 'Annual 7-day Low Flow (m3/s) 50yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ann_7df_25 IS 'Annual 7-day Low Flow (m3/s) 25yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ann_7df_20 IS 'Annual 7-day Low Flow (m3/s) 20yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ann_7df_10 IS 'Annual 7-day Low Flow (m3/s) 10yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ann_7df_5 IS 'Annual 7-day Low Flow (m3/s) 5yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ann_7df_2 IS 'Annual 7-day Low Flow (m3/s) 2yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ann_7df_1 IS 'Annual 7-day Low Flow (m3/s) 1yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ann_7df_1_01 IS 'Annual 7-day Low Flow (m3/s) 1.01yr Return Period';

    COMMENT ON COLUMN bcwat_obs.flow_metrics.ann_7df_yr IS 'Annual 7-day Low Flow (m3/s) Years of Data';

    COMMENT ON COLUMN bcwat_obs.variable.variable_name IS 'Variable name will be the display name for the data.';

    COMMENT ON COLUMN bcwat_obs.variable.cell_method IS 'The cell_method is how the cell was initially calculated';

    COMMENT ON SCHEMA bcwat_obs IS 'bcwat_obs full name is bcwat_observations. This is where most of the waterportal observations based data and information are kept';

    -- FOREIGN KEYS --

    ALTER TABLE bcwat_obs.station ADD CONSTRAINT station_station_status_id_fkey FOREIGN KEY (station_status_id) REFERENCES bcwat_obs.station_status (status_id);

    ALTER TABLE bcwat_obs.station ADD CONSTRAINT station_operation_id_fkey FOREIGN KEY (operation_id) REFERENCES bcwat_obs.operation (operation_id);

    ALTER TABLE bcwat_obs.station_variable ADD CONSTRAINT station_variable_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.station_variable ADD CONSTRAINT station_variable_variable_id_fkey FOREIGN KEY (variable_id) REFERENCES bcwat_obs.variable (variable_id);

    ALTER TABLE bcwat_obs.station_year ADD CONSTRAINT station_year_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.water_discharge ADD CONSTRAINT water_discharge_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.water_discharge ADD CONSTRAINT water_discharge_variable_id_fkey FOREIGN KEY (variable_id) REFERENCES bcwat_obs.variable (variable_id);

    ALTER TABLE bcwat_obs.water_discharge ADD CONSTRAINT water_discharge_qa_id_fkey FOREIGN KEY (qa_id) REFERENCES bcwat_obs.qa_type (qa_type_id);

    ALTER TABLE bcwat_obs.water_level ADD CONSTRAINT water_level_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.water_level ADD CONSTRAINT water_level_variable_id_fkey FOREIGN KEY (variable_id) REFERENCES bcwat_obs.variable (variable_id);

    ALTER TABLE bcwat_obs.water_level ADD CONSTRAINT water_level_qa_id_fkey FOREIGN KEY (qa_id) REFERENCES bcwat_obs.qa_type (qa_type_id);

    ALTER TABLE bcwat_obs.ground_water_level ADD CONSTRAINT ground_water_level_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.ground_water_level ADD CONSTRAINT ground_water_level_variable_id_fkey FOREIGN KEY (variable_id) REFERENCES bcwat_obs.variable (variable_id);

    ALTER TABLE bcwat_obs.ground_water_level ADD CONSTRAINT ground_water_level_qa_id_fkey FOREIGN KEY (qa_id) REFERENCES bcwat_obs.qa_type (qa_type_id);

    ALTER TABLE bcwat_obs.climate_temperature ADD CONSTRAINT climate_temperature_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.climate_temperature ADD CONSTRAINT climate_temperature_variable_id_fkey FOREIGN KEY (variable_id) REFERENCES bcwat_obs.variable (variable_id);

    ALTER TABLE bcwat_obs.climate_precipitation ADD CONSTRAINT climate_precipitation_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.climate_precipitation ADD CONSTRAINT climate_precipitation_variable_id_fkey FOREIGN KEY (variable_id) REFERENCES bcwat_obs.variable (variable_id);

    ALTER TABLE bcwat_obs.climate_snow_depth ADD CONSTRAINT climate_snow_depth_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.climate_snow_depth ADD CONSTRAINT climate_snow_depth_variable_id_fkey FOREIGN KEY (variable_id) REFERENCES bcwat_obs.variable (variable_id);

    ALTER TABLE bcwat_obs.climate_swe ADD CONSTRAINT climate_swe_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.climate_swe ADD CONSTRAINT climate_swe_variable_id_fkey FOREIGN KEY (variable_id) REFERENCES bcwat_obs.variable (variable_id);

    ALTER TABLE bcwat_obs.climate_msp ADD CONSTRAINT climate_msp_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.climate_msp ADD CONSTRAINT climate_msp_variable_id_fkey FOREIGN KEY (variable_id) REFERENCES bcwat_obs.variable (variable_id);

    ALTER TABLE bcwat_obs.extreme_flow ADD CONSTRAINT extreme_flow_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.extreme_flow ADD CONSTRAINT extreme_flow_variable_id_fkey FOREIGN KEY (variable_id) REFERENCES bcwat_obs.variable (variable_id);

    ALTER TABLE bcwat_obs.flow_metrics ADD CONSTRAINT flow_metrics_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.wsc_station_year_exclude ADD CONSTRAINT wsc_station_year_exclude FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.wsc_station_year_exclude ADD CONSTRAINT wsc_station_year_exclude_exclude_type_fkey FOREIGN KEY (exclude_id) REFERENCES bcwat_obs.exclude_reason (exclude_id);

    ALTER TABLE bcwat_obs.water_quality_hourly ADD CONSTRAINT water_quality_hourly_qa_id_fkey FOREIGN KEY (qa_id) REFERENCES bcwat_obs.qa_type (qa_type_id);

    ALTER TABLE bcwat_obs.water_quality_hourly ADD CONSTRAINT water_quality_hourly_parameter_id_fkey FOREIGN KEY (parameter_id) REFERENCES bcwat_obs.water_quality_parameter (parameter_id);

    ALTER TABLE bcwat_obs.climate_hourly ADD CONSTRAINT climate_hourly_qa_id_fkey FOREIGN KEY (qa_id) REFERENCES bcwat_obs.qa_type (qa_type_id);

    ALTER TABLE bcwat_obs.climate_hourly ADD CONSTRAINT climate_houly_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.climate_hourly ADD CONSTRAINT climate_hourly_variable_id_fkey FOREIGN KEY (variable_id) REFERENCES bcwat_obs.variable (variable_id);

    ALTER TABLE bcwat_obs.water_quality_data ADD CONSTRAINT water_quality_data_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.water_quality_data ADD CONSTRAINT water_quality_data_parameter_id FOREIGN KEY (parameter_id) REFERENCES bcwat_obs.water_quality_parameter (parameter_id);

    ALTER TABLE bcwat_obs.water_quality_parameter ADD CONSTRAINT water_quality_parameter_grouping_grouping_id_fkey FOREIGN KEY (grouping_id) REFERENCES bcwat_obs.water_quality_parameter_grouping (grouping_id);

    ALTER TABLE bcwat_obs.water_quality_user_data ADD CONSTRAINT water_uality_user_data_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.station_region ADD CONSTRAINT station_region_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.station_region ADD CONSTRAINT station_region_region_id_fkey FOREIGN KEY (region_id) REFERENCES bcwat_obs.region (region_id);

    ALTER TABLE bcwat_obs.station_project_id ADD CONSTRAINT station_project_id_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.station_project_id ADD CONSTRAINT station_project_id_project_id_fkey FOREIGN KEY (project_id) REFERENCES bcwat_obs.project_id (project_id);

    ALTER TABLE bcwat_obs.climate_msp ADD CONSTRAINT climate_msp_qa_id_fkey FOREIGN KEY (qa_id) REFERENCES bcwat_obs.qa_type (qa_type_id);

    ALTER TABLE bcwat_obs.climate_precipitation ADD CONSTRAINT climate_precipitation_qa_id_fkey FOREIGN KEY (qa_id) REFERENCES bcwat_obs.qa_type (qa_type_id);

    ALTER TABLE bcwat_obs.climate_snow_depth ADD CONSTRAINT climate_snow_depth_qa_id_fkey FOREIGN KEY (qa_id) REFERENCES bcwat_obs.qa_type (qa_type_id);

    ALTER TABLE bcwat_obs.climate_swe ADD CONSTRAINT climate_swe_qa_id_fkey FOREIGN KEY (qa_id) REFERENCES bcwat_obs.qa_type (qa_type_id);

    ALTER TABLE bcwat_obs.climate_temperature ADD CONSTRAINT climate_temperature_qa_id_fkey FOREIGN KEY (qa_id) REFERENCES bcwat_obs.qa_type (qa_type_id);

    ALTER TABLE bcwat_obs.station_type_id ADD CONSTRAINT station_type_id_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.station_type_id ADD CONSTRAINT station_type_id_type_id_fkey FOREIGN KEY (type_id) REFERENCES bcwat_obs.station_type (type_id);

    ALTER TABLE bcwat_obs.station_network_id ADD CONSTRAINT station_network_id_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.station_network_id ADD CONSTRAINT station_network_id_network_id_fkey FOREIGN KEY (network_id) REFERENCES bcwat_obs.network (network_id);

    ALTER TABLE bcwat_obs.climate_wind ADD CONSTRAINT climate_wind_qa_id_fkey FOREIGN KEY (qa_id) REFERENCES bcwat_obs.qa_type (qa_type_id);

    ALTER TABLE bcwat_obs.climate_wind ADD CONSTRAINT climate_wind_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.climate_wind ADD CONSTRAINT climate_wind_variable_id_fkey FOREIGN KEY (variable_id) REFERENCES bcwat_obs.variable (variable_id);

    ALTER TABLE bcwat_obs.climate_snow_amount ADD CONSTRAINT climate_snow_amount_qa_id_fkey FOREIGN KEY (qa_id) REFERENCES bcwat_obs.qa_type (qa_type_id);

    ALTER TABLE bcwat_obs.climate_snow_amount ADD CONSTRAINT climate_snow_amount_station_id_fkey FOREIGN KEY (station_id) REFERENCES bcwat_obs.station (station_id);

    ALTER TABLE bcwat_obs.climate_snow_amount ADD CONSTRAINT climate_snow_amount_variable_id_fkey FOREIGN KEY (variable_id) REFERENCES bcwat_obs.variable (variable_id);

    -- CHECK CONSTRAINTS --

    ALTER TABLE bcwat_obs.ground_water_level ADD CONSTRAINT ground_water_level_check_value_not_negative CHECK (value >= 0);

    ALTER TABLE bcwat_obs.climate_precipitation ADD CONSTRAINT climate_precipitation_check_value_not_negative CHECK (value >= 0);

    ALTER TABLE bcwat_obs.climate_snow_depth ADD CONSTRAINT climate_snow_depth_check_value_not_negative CHECK (value >= 0);

    ALTER TABLE bcwat_obs.climate_swe ADD CONSTRAINT climate_swe_check_value_not_negative CHECK (value >= 0);

    ALTER TABLE bcwat_obs.climate_msp ADD CONSTRAINT climate_msp_check_value_not_negative CHECK (value >= 0);

    ALTER TABLE bcwat_obs.extreme_flow ADD CONSTRAINT extreme_flow_check_value_not_negative CHECK (value >= 0);

-- VIEWS --

    CREATE OR REPLACE VIEW bcwat_obs.scrape_station AS
        SELECT
            station.original_id,
            station.station_id,
            'wsc'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 1
        AND
            station.scrape = true
        OR
            (station.original_id = ANY (ARRAY['09AA010'::character varying::text, '09AA014'::character varying::text, '09AA015'::character varying::text, '09AE004'::character varying::text]))
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'flowworks'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id IN (3, 50)
        AND
            station.scrape = true
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'surrey_wsc'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 1
        AND
            (station.station_id IN ( SELECT station_project_id.station_id
        FROM
            bcwat_obs.station_project_id
        WHERE
            station_project_id.project_id = 2))
        AND
            station.scrape = true
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'surrey_scada'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 4
        AND
            station.scrape = true
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'delta'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 5
        AND
            station.scrape = true
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'nfld_dec'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 2
        AND
            station.scrape = true
    UNION ALL
        SELECT
            'OW'::text || lpad(station.original_id, 3, '0'::text) AS original_id,
            station.station_id,
            'gw'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 10
        AND
            station.scrape = true
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'datamart'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 21
        AND
            station.scrape = true
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'moti'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 20
        AND
            station.scrape = true
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'asp'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 19
        AND
            station.scrape = true
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'bch'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 14
        AND
            station.scrape = true
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'msp'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        JOIN
            bcwat_obs.station_type_id station_type
        USING
            (station_id)
        WHERE
            station_type.type_id = 6
        AND
            net_id.network_id = 24
        AND
            station.scrape = true
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'weatherfarmprd'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 30
        AND
            station.scrape = true
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'eccc_wq'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 44
        AND
            station.scrape = true
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'flnro-wmb'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 16
        AND
            station.scrape = true
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'env-hydro'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        JOIN
            bcwat_obs.station_type_id station_type
        USING
            (station_id)
        WHERE
            (net_id.network_id = ANY (ARRAY[53, 28]))
        AND
            station.scrape = true
        AND
            station_type.type_id = 1
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'env-climate'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        JOIN
            bcwat_obs.station_type_id station_type
        USING
            (station_id)
        WHERE
            net_id.network_id = 53
        AND
            station.scrape = true
        AND
            station_type.type_id = 3
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'env-gw'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        JOIN
            bcwat_obs.station_type_id station_type
        USING
            (station_id)
        WHERE
            net_id.network_id = 53
        AND
            station.scrape = true
        AND
            station_type.type_id = 2
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'env-hydro-surrey'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        JOIN
            bcwat_obs.station_type_id station_type
        USING
            (station_id)
        WHERE
            net_id.network_id = 53
        AND
            station.scrape = true
        AND
            (station.original_id = ANY (ARRAY['08MH0001'::character varying::text, '08MH0002'::character varying::text]))
        AND
            station_type.type_id = 1
    UNION ALL
        SELECT
            station.original_id,
            station.station_id,
            'env-aqn'::text AS station_data_source
        FROM
            bcwat_obs.station
        JOIN
            bcwat_obs.station_network_id AS net_id
        USING
            (station_id)
        WHERE
            net_id.network_id = 18
        AND
            station.scrape = true;

    CREATE SCHEMA bcwat_ws;

    -- TABLE CREATION --

    CREATE TABLE bcwat_ws.fwa_fund (
        watershed_feature_id integer PRIMARY KEY,
        fwa_watershed_code text DEFAULT '',
        local_watershed_code text DEFAULT '',
        the_geom geometry(MultiPolygon, 3005),
        centroid geometry(Point, 3005),
        lake_name text DEFAULT '',
        report smallint,
        local_watershed_order integer,
        has_upstream boolean DEFAULT false,
        in_study_area boolean NOT NULL DEFAULT false,
        point_inside_poly geometry(Point,3005),
        lake boolean DEFAULT false,
        area DOUBLE PRECISION,
        geom4326 geometry(MultiPolygon,4326),
        point_inside_poly4326 geometry(Point, 4326),
        pip_x DOUBLE PRECISION,
        pip_y DOUBLE PRECISION,
        watershed_feature_id_foundry_eca integer,
        has_netcdf boolean DEFAULT false
    );

    CREATE TABLE bcwat_ws.fwa_union (
        fwa_watershed_code text PRIMARY KEY,
        geom_simp4326 geometry(MultiPolygon,4326)
    );

    CREATE TABLE bcwat_ws.fund_rollup (
        watershed_feature_id integer PRIMARY KEY,
        upstream_area DOUBLE PRECISION NOT NULL,
        dem400 DOUBLE PRECISION NOT NULL,
        ppt01 DOUBLE PRECISION NOT NULL,
        ppt02 DOUBLE PRECISION NOT NULL,
        ppt03 DOUBLE PRECISION NOT NULL,
        ppt04 DOUBLE PRECISION NOT NULL,
        ppt05 DOUBLE PRECISION NOT NULL,
        ppt06 DOUBLE PRECISION NOT NULL,
        ppt07 DOUBLE PRECISION NOT NULL,
        ppt08 DOUBLE PRECISION NOT NULL,
        ppt09 DOUBLE PRECISION NOT NULL,
        ppt10 DOUBLE PRECISION NOT NULL,
        ppt11 DOUBLE PRECISION NOT NULL,
        ppt12 DOUBLE PRECISION NOT NULL,
        tave01 DOUBLE PRECISION NOT NULL,
        tave02 DOUBLE PRECISION NOT NULL,
        tave03 DOUBLE PRECISION NOT NULL,
        tave04 DOUBLE PRECISION NOT NULL,
        tave05 DOUBLE PRECISION NOT NULL,
        tave06 DOUBLE PRECISION NOT NULL,
        tave07 DOUBLE PRECISION NOT NULL,
        tave08 DOUBLE PRECISION NOT NULL,
        tave09 DOUBLE PRECISION NOT NULL,
        tave10 DOUBLE PRECISION NOT NULL,
        tave11 DOUBLE PRECISION NOT NULL,
        tave12 DOUBLE PRECISION NOT NULL,
        pas01 DOUBLE PRECISION NOT NULL,
        pas02 DOUBLE PRECISION NOT NULL,
        pas03 DOUBLE PRECISION NOT NULL,
        pas04 DOUBLE PRECISION NOT NULL,
        pas05 DOUBLE PRECISION NOT NULL,
        pas06 DOUBLE PRECISION NOT NULL,
        pas07 DOUBLE PRECISION NOT NULL,
        pas08 DOUBLE PRECISION NOT NULL,
        pas09 DOUBLE PRECISION NOT NULL,
        pas10 DOUBLE PRECISION NOT NULL,
        pas11 DOUBLE PRECISION NOT NULL,
        pas12 DOUBLE PRECISION NOT NULL,
        pas01_a2 DOUBLE PRECISION NOT NULL,
        pas01_b1 DOUBLE PRECISION NOT NULL,
        pas01_a1b DOUBLE PRECISION NOT NULL,
        pas02_a2 DOUBLE PRECISION NOT NULL,
        pas02_b1 DOUBLE PRECISION NOT NULL,
        pas02_a1b DOUBLE PRECISION NOT NULL,
        pas03_a2 DOUBLE PRECISION NOT NULL,
        pas03_b1 DOUBLE PRECISION NOT NULL,
        pas03_a1b DOUBLE PRECISION NOT NULL,
        pas04_a2 DOUBLE PRECISION NOT NULL,
        pas04_b1 DOUBLE PRECISION NOT NULL,
        pas04_a1b DOUBLE PRECISION NOT NULL,
        pas05_a2 DOUBLE PRECISION NOT NULL,
        pas05_b1 DOUBLE PRECISION NOT NULL,
        pas05_a1b DOUBLE PRECISION NOT NULL,
        pas06_a2 DOUBLE PRECISION NOT NULL,
        pas06_b1 DOUBLE PRECISION NOT NULL,
        pas06_a1b DOUBLE PRECISION NOT NULL,
        pas07_a2 DOUBLE PRECISION NOT NULL,
        pas07_b1 DOUBLE PRECISION NOT NULL,
        pas07_a1b DOUBLE PRECISION NOT NULL,
        pas08_a2 DOUBLE PRECISION NOT NULL,
        pas08_b1 DOUBLE PRECISION NOT NULL,
        pas08_a1b DOUBLE PRECISION NOT NULL,
        pas09_a2 DOUBLE PRECISION NOT NULL,
        pas09_b1 DOUBLE PRECISION NOT NULL,
        pas09_a1b DOUBLE PRECISION NOT NULL,
        pas10_a2 DOUBLE PRECISION NOT NULL,
        pas10_b1 DOUBLE PRECISION NOT NULL,
        pas10_a1b DOUBLE PRECISION NOT NULL,
        pas11_a2 DOUBLE PRECISION NOT NULL,
        pas11_b1 DOUBLE PRECISION NOT NULL,
        pas11_a1b DOUBLE PRECISION NOT NULL,
        pas12_a2 DOUBLE PRECISION NOT NULL,
        pas12_b1 DOUBLE PRECISION NOT NULL,
        pas12_a1b DOUBLE PRECISION NOT NULL,
        ppt01_a2 DOUBLE PRECISION NOT NULL,
        ppt01_b1 DOUBLE PRECISION NOT NULL,
        ppt01_a1b DOUBLE PRECISION NOT NULL,
        ppt02_a2 DOUBLE PRECISION NOT NULL,
        ppt02_b1 DOUBLE PRECISION NOT NULL,
        ppt02_a1b DOUBLE PRECISION NOT NULL,
        ppt03_a2 DOUBLE PRECISION NOT NULL,
        ppt03_b1 DOUBLE PRECISION NOT NULL,
        ppt03_a1b DOUBLE PRECISION NOT NULL,
        ppt04_a2 DOUBLE PRECISION NOT NULL,
        ppt04_b1 DOUBLE PRECISION NOT NULL,
        ppt04_a1b DOUBLE PRECISION NOT NULL,
        ppt05_a2 DOUBLE PRECISION NOT NULL,
        ppt05_b1 DOUBLE PRECISION NOT NULL,
        ppt05_a1b DOUBLE PRECISION NOT NULL,
        ppt06_a2 DOUBLE PRECISION NOT NULL,
        ppt06_b1 DOUBLE PRECISION NOT NULL,
        ppt06_a1b DOUBLE PRECISION NOT NULL,
        ppt07_a2 DOUBLE PRECISION NOT NULL,
        ppt07_b1 DOUBLE PRECISION NOT NULL,
        ppt07_a1b DOUBLE PRECISION NOT NULL,
        ppt08_a2 DOUBLE PRECISION NOT NULL,
        ppt08_b1 DOUBLE PRECISION NOT NULL,
        ppt08_a1b DOUBLE PRECISION NOT NULL,
        ppt09_a2 DOUBLE PRECISION NOT NULL,
        ppt09_b1 DOUBLE PRECISION NOT NULL,
        ppt09_a1b DOUBLE PRECISION NOT NULL,
        ppt10_a2 DOUBLE PRECISION NOT NULL,
        ppt10_b1 DOUBLE PRECISION NOT NULL,
        ppt10_a1b DOUBLE PRECISION NOT NULL,
        ppt11_a2 DOUBLE PRECISION NOT NULL,
        ppt11_b1 DOUBLE PRECISION NOT NULL,
        ppt11_a1b DOUBLE PRECISION NOT NULL,
        ppt12_a2 DOUBLE PRECISION NOT NULL,
        ppt12_b1 DOUBLE PRECISION NOT NULL,
        ppt12_a1b DOUBLE PRECISION NOT NULL,
        tave01_a2 DOUBLE PRECISION NOT NULL,
        tave01_b1 DOUBLE PRECISION NOT NULL,
        tave01_a1b DOUBLE PRECISION NOT NULL,
        tave02_a2 DOUBLE PRECISION NOT NULL,
        tave02_b1 DOUBLE PRECISION NOT NULL,
        tave02_a1b DOUBLE PRECISION NOT NULL,
        tave03_a2 DOUBLE PRECISION NOT NULL,
        tave03_b1 DOUBLE PRECISION NOT NULL,
        tave03_a1b DOUBLE PRECISION NOT NULL,
        tave04_a2 DOUBLE PRECISION NOT NULL,
        tave04_b1 DOUBLE PRECISION NOT NULL,
        tave04_a1b DOUBLE PRECISION NOT NULL,
        tave05_a2 DOUBLE PRECISION NOT NULL,
        tave05_b1 DOUBLE PRECISION NOT NULL,
        tave05_a1b DOUBLE PRECISION NOT NULL,
        tave06_a2 DOUBLE PRECISION NOT NULL,
        tave06_b1 DOUBLE PRECISION NOT NULL,
        tave06_a1b DOUBLE PRECISION NOT NULL,
        tave07_a2 DOUBLE PRECISION NOT NULL,
        tave07_b1 DOUBLE PRECISION NOT NULL,
        tave07_a1b DOUBLE PRECISION NOT NULL,
        tave08_a2 DOUBLE PRECISION NOT NULL,
        tave08_b1 DOUBLE PRECISION NOT NULL,
        tave08_a1b DOUBLE PRECISION NOT NULL,
        tave09_a2 DOUBLE PRECISION NOT NULL,
        tave09_b1 DOUBLE PRECISION NOT NULL,
        tave09_a1b DOUBLE PRECISION NOT NULL,
        tave10_a2 DOUBLE PRECISION NOT NULL,
        tave10_b1 DOUBLE PRECISION NOT NULL,
        tave10_a1b DOUBLE PRECISION NOT NULL,
        tave11_a2 DOUBLE PRECISION NOT NULL,
        tave11_b1 DOUBLE PRECISION NOT NULL,
        tave11_a1b DOUBLE PRECISION NOT NULL,
        tave12_a2 DOUBLE PRECISION NOT NULL,
        tave12_b1 DOUBLE PRECISION NOT NULL,
        tave12_a1b DOUBLE PRECISION NOT NULL,
        lcc_shrub DOUBLE PRECISION NOT NULL,
        lcc_grassland DOUBLE PRECISION NOT NULL,
        lcc_coniferous DOUBLE PRECISION NOT NULL,
        lcc_water DOUBLE PRECISION NOT NULL,
        lcc_snow DOUBLE PRECISION NOT NULL,
        lcc_developed DOUBLE PRECISION NOT NULL,
        lcc_wetland DOUBLE PRECISION NOT NULL,
        lcc_herb DOUBLE PRECISION NOT NULL,
        lcc_deciduous DOUBLE PRECISION NOT NULL,
        lcc_mixed DOUBLE PRECISION NOT NULL,
        lcc_barren DOUBLE PRECISION NOT NULL,
        lcc_cropland DOUBLE PRECISION NOT NULL,
        q01 DOUBLE PRECISION NOT NULL,
        q02 DOUBLE PRECISION NOT NULL,
        q03 DOUBLE PRECISION NOT NULL,
        q04 DOUBLE PRECISION NOT NULL,
        q05 DOUBLE PRECISION NOT NULL,
        q06 DOUBLE PRECISION NOT NULL,
        q07 DOUBLE PRECISION NOT NULL,
        q08 DOUBLE PRECISION NOT NULL,
        q09 DOUBLE PRECISION NOT NULL,
        q10 DOUBLE PRECISION NOT NULL,
        q11 DOUBLE PRECISION NOT NULL,
        q12 DOUBLE PRECISION NOT NULL,
        qyr DOUBLE PRECISION NOT NULL,
        rr boolean NOT NULL,
        downstream_id integer NOT NULL,
        summer_sensitivity boolean DEFAULT false,
        winter_sensitivity boolean DEFAULT true,
        elevs DOUBLE PRECISION[]
    );

    CREATE TABLE bcwat_ws.fund_rollup_report (
        watershed_feature_id integer PRIMARY KEY,
        watershedarea numeric NOT NULL,
        dem400 DOUBLE PRECISION NOT NULL,
        ppt_mon_hist DOUBLE PRECISION[] NOT NULL,
        tave_mon_hist DOUBLE PRECISION[] NOT NULL,
        pas_mon_hist DOUBLE PRECISION[] NOT NULL,
        pas_mon_fut_min DOUBLE PRECISION[] NOT NULL,
        pas_mon_fut_max DOUBLE PRECISION[] NOT NULL,
        ppt_mon_fut_min DOUBLE PRECISION[] NOT NULL,
        ppt_mon_fut_max DOUBLE PRECISION[] NOT NULL,
        tave_mon_fut_min DOUBLE PRECISION[] NOT NULL,
        tave_mon_fut_max DOUBLE PRECISION[] NOT NULL,
        shrub DOUBLE PRECISION NOT NULL,
        grassland DOUBLE PRECISION NOT NULL,
        coniferous DOUBLE PRECISION NOT NULL,
        water DOUBLE PRECISION NOT NULL,
        snow DOUBLE PRECISION NOT NULL,
        developed DOUBLE PRECISION NOT NULL,
        wetland DOUBLE PRECISION NOT NULL,
        herb DOUBLE PRECISION NOT NULL,
        deciduous DOUBLE PRECISION NOT NULL,
        mixed DOUBLE PRECISION NOT NULL,
        barren DOUBLE PRECISION NOT NULL,
        cropland DOUBLE PRECISION NOT NULL,
        mad_m3s numeric NOT NULL,
        mad_m3yr numeric NOT NULL,
        qmon_m3s numeric[] NOT NULL,
        rr boolean NOT NULL,
        downstream_id integer NOT NULL,
        summer_sensitivity boolean NOT NULL,
        winter_sensitivity boolean NOT NULL,
        elevs DOUBLE PRECISION[],
        mgmt_lng DOUBLE PRECISION NOT NULL,
        mgmt_lat DOUBLE PRECISION NOT NULL,
        gnis_name text DEFAULT '',
        downstream_area DOUBLE PRECISION NOT NULL,
        query_polygon json NOT NULL,
        mgmt_polygon json NOT NULL,
        ws_area_km numeric NOT NULL,
        local_watershed_order smallint
    );

    CREATE TABLE bcwat_ws.ws_geom_all_report (
        watershed_feature_id integer PRIMARY KEY,
        fwa_watershed_code text DEFAULT '',
        local_watershed_code text DEFAULT '',
        upstream_geom_4326_z12 geometry(Geometry,4326),
        area DOUBLE PRECISION NOT NULL,
        lon4326 DOUBLE PRECISION NOT NULL,
        lat4326 DOUBLE PRECISION NOT NULL,
        gnis_name text DEFAULT '',
        upstream_geom4326 geometry(geometry,4326) NOT NULL,
        local_watershed_order smallint
    );

    CREATE TABLE bcwat_ws.fdc (
        watershed_feature_id integer,
        month smallint,
        percs smallint[] NOT NULL,
        c1 text NOT NULL DEFAULT '',
        q_m3s_c1 DOUBLE PRECISION[] NOT NULL,
        c2 text NOT NULL DEFAULT '',
        q_m3s_c2 DOUBLE PRECISION[] NOT NULL,
        c3 text NOT NULL DEFAULT '',
        q_m3s_c3 DOUBLE PRECISION[] NOT NULL,
        percs_all smallint[] NOT NULL,
        q_m3s_c1_all DOUBLE PRECISION[] NOT NULL,
        PRIMARY KEY (watershed_feature_id, month)
    );

    CREATE TABLE bcwat_ws.fdc_physical (
        watershed_feature_id integer PRIMARY KEY,
        lat DOUBLE PRECISION,
        lon DOUBLE PRECISION,
        upstream_area_km2 DOUBLE PRECISION,
        min_elev DOUBLE PRECISION,
        avg_elev DOUBLE PRECISION,
        max_elev DOUBLE PRECISION,
        month smallint[],
        ppt DOUBLE PRECISION[],
        tave DOUBLE PRECISION[],
        pas DOUBLE PRECISION[]
    );

    CREATE TABLE bcwat_ws.fdc_distance (
        watershed_feature_id integer,
        candidate text,
        month01 DOUBLE PRECISION,
        month02 DOUBLE PRECISION,
        month03 DOUBLE PRECISION,
        month04 DOUBLE PRECISION,
        month05 DOUBLE PRECISION,
        month06 DOUBLE PRECISION,
        month07 DOUBLE PRECISION,
        month08 DOUBLE PRECISION,
        month09 DOUBLE PRECISION,
        month10 DOUBLE PRECISION,
        month11 DOUBLE PRECISION,
        month12 DOUBLE PRECISION,
        PRIMARY KEY (watershed_feature_id, candidate)
    );

    CREATE TABLE bcwat_ws.geo_feature (
        geo_feature_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        geoname text NOT NULL,
        x numeric NOT NULL,
        y numeric NOT NULL,
        zoom integer,
        geocomment text DEFAULT '',
        concisecode text DEFAULT '',
        geom4326 geometry(Point, 4326),
        dt_imported timestamptz
    );

    CREATE TABLE bcwat_ws.mapsearch2 (
        mapsearch_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
        geoname text NOT NULL,
        x numeric NOT NULL,
        y numeric NOT NULL,
        zoom integer,
        geocomment text DEFAULT '',
        concisecode text DEFAULT ''
    );

    CREATE TABLE bcwat_ws.lake (
        waterbody_poly_id integer PRIMARY KEY,
        geom4326 geometry(MultiPolygon,4326),
        geom3005 geometry(MultiPolygon,3005),
        gnis_name_1 text DEFAULT '',
        area_m2 DOUBLE PRECISION,
        fwa_watershed_code text DEFAULT '',
        local_watershed_code text DEFAULT '',
        geom4326_buffer_100 geometry(MultiPolygon,4326),
        winter_allocs_m3 DOUBLE PRECISION
    );

    CREATE TABLE bcwat_ws.fwa_stream_name (
        linear_feature_id integer PRIMARY KEY,
        fwa_watershed_code text DEFAULT '',
        gnis_name text DEFAULT '',
        stream_magnitude integer,
        geom geometry(MultiLineString,3005),
        point_on_line geometry(Point,3005)
    );

    CREATE TABLE bcwat_ws.fwa_stream_name_unique (
        fwa_watershed_code text PRIMARY KEY,
        gnis_name text DEFAULT ''
    );

    -- FOREIGN KEYS --

    ALTER TABLE bcwat_ws.fund_rollup ADD CONSTRAINT fund_rollup_watershed_feature_id_fkey FOREIGN KEY (watershed_feature_id) REFERENCES bcwat_ws.fwa_fund (watershed_feature_id);

    ALTER TABLE bcwat_ws.fund_rollup_report ADD CONSTRAINT funds_rollup_report_watershed_feature_id_fkey FOREIGN KEY (watershed_feature_id) REFERENCES bcwat_ws.fwa_fund (watershed_feature_id);

    ALTER TABLE bcwat_ws.ws_geom_all_report ADD CONSTRAINT ws_geom_all_report_watershed_feature_id_fkey FOREIGN KEY (watershed_feature_id) REFERENCES bcwat_ws.fwa_fund (watershed_feature_id);

    ALTER TABLE bcwat_ws.fdc_physical ADD CONSTRAINT fdc_physical_watershed_feature_id_fkey FOREIGN KEY (watershed_feature_id) REFERENCES bcwat_ws.fwa_fund (watershed_feature_id);

    -- COMMENTS --

    COMMENT ON SCHEMA bcwat_ws IS 'The full name of bcwat_ws is bcwat_watershed. This schema consists of watershed data as well as data that is based on the watershed (topography, watershed climate, etc.)';
