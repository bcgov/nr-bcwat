CREATE SCHEMA "bcwat_lic";

-- TABLE CREATION --

CREATE TABLE "bcwat_lic"."lake_licence" (
"waterbody_poly_id" integer,
"lake_name" text DEFAULT '',
"lake_licence_id" text DEFAULT '',
"licence_stream_name" text DEFAULT '',
PRIMARY KEY ("waterbody_poly_id", "lake_licence_id")
);

CREATE TABLE "bcwat_lic"."bc_wls_water_approval" (
"bc_wls_water_approval_id" text PRIMARY KEY,
"wsd_region" text DEFAULT '',
"approval_type" text DEFAULT '',
"approval_file_number" text DEFAULT '',
"fcbc_tracking_number" text DEFAULT '',
"source" text DEFAULT '',
"works_description" text DEFAULT '',
"quantity" DOUBLE PRECISION,
"quantity_units" text DEFAULT '',
"qty_diversion_max_rate" DOUBLE PRECISION,
"qty_units_diversion_max_rate" text DEFAULT '',
"water_district" text DEFAULT '',
"precinct" text DEFAULT '',
"latitude" DOUBLE PRECISION,
"longitude" DOUBLE PRECISION,
"approval_status" text DEFAULT '',
"application_date" date,
"fcbc_acceptance_date" date,
"approval_issuance_date" date,
"approval_start_date" date,
"approval_expiry_date" date,
"approval_refuse_abandon_date" date,
"geom4326" geometry(Point,4326) NOT NULL,
"created" date NOT NULL DEFAULT now(),
"proponent" text DEFAULT '',
"podno" text DEFAULT ''
);

CREATE TABLE "bcwat_lic"."bc_wls_wrl_wra" (
"wls_wrl_wra_id" text PRIMARY KEY,
"licence_no" varchar(16) NOT NULL DEFAULT '',
"tpod_tag" varchar(25) NOT NULL DEFAULT '',
"purpose" text NOT NULL DEFAULT '',
"pcl_no" varchar(15) DEFAULT '',
"qty_original" DOUBLE PRECISION,
"qty_flag" varchar(1) DEFAULT '',
"qty_units" varchar(25) DEFAULT '',
"licensee" text,
"lic_status_date" date,
"priority_date" date,
"expiry_date" date,
"longitude" DOUBLE PRECISION,
"latitude" DOUBLE PRECISION,
"stream_name" varchar DEFAULT '',
"quantity_day_m3" DOUBLE PRECISION,
"quantity_sec_m3" DOUBLE PRECISION,
"quantity_ann_m3" DOUBLE PRECISION,
"lic_status" text DEFAULT '',
"rediversion_flag" varchar(1) DEFAULT '',
"flag_desc" varchar(100) DEFAULT '',
"file_no" varchar(15) DEFAULT '',
"water_allocation_type" varchar(2) NOT NULL DEFAULT '',
"pod_diversion_type" text,
"geom4326" geometry(Point,4326),
"water_source_type_desc" text DEFAULT '',
"hydraulic_connectivity" varchar(215) DEFAULT '',
"well_tag_number" DOUBLE PRECISION,
"related_licences" text[] DEFAULT array[]::text[],
"industry_activity" text NOT NULL DEFAULT '',
"purpose_groups" text NOT NULL DEFAULT '',
"is_consumptive" boolean NOT NULL,
"ann_adjust" DOUBLE PRECISION,
"quantity_ann_m3_storage_adjust" DOUBLE PRECISION DEFAULT NULL,
"puc_groupings_storage" text DEFAULT '',
"qty_diversion_max_rate" DOUBLE PRECISION,
"qty_units_diversion_max_rate" text
);

CREATE TABLE "bcwat_lic"."licence_ogc_short_term_approval" (
"short_term_approval_id" text PRIMARY KEY,
"pod_number" text DEFAULT '',
"short_term_water_use_num" text DEFAULT '',
"water_source_type" text DEFAULT '',
"water_source_type_desc" text DEFAULT '',
"water_source_name" text DEFAULT '',
"purpose" text DEFAULT '',
"purpose_desc" text DEFAULT '',
"approved_volume_per_day" integer,
"approved_total_volume" integer,
"approved_start_date" date,
"approved_end_date" date,
"status" text DEFAULT '',
"application_determination_num" text DEFAULT '',
"activity_approval_date" date,
"activity_cancel_date" date,
"legacy_ogc_file_number" text DEFAULT '',
"proponent" text NOT NULL DEFAULT '',
"authority_type" text DEFAULT '',
"land_type" text DEFAULT '',
"data_source" text DEFAULT '',
"geom4326" geometry(Point,4326),
"latitude" DOUBLE PRECISION,
"longitude" DOUBLE PRECISION,
"is_consumptive" boolean
);

CREATE TABLE "bcwat_lic"."elevation_bookend" (
"region_id" smallint PRIMARY KEY,
"elevation_flat" DOUBLE PRECISION[],
"elevation_steep" DOUBLE PRECISION[]
);

CREATE TABLE "bcwat_lic"."bc_data_import_date" (
"dataset" text PRIMARY KEY,
"import_date" date
);

CREATE TABLE IF NOT EXISTS "bcwat_lic"."licence_bc_purpose" (
    "purpose" text PRIMARY KEY,
    "general_activity_code" text DEFAULT 'Other',
    "purpose_name" text,
    "purpose_code" text UNIQUE,
    "purpose_groups" text,
    "is_consumptive" boolean,
    "puc_groupings_storage" text,
    "pid" integer NOT NULL,
    "still_used_by_databc" boolean DEFAULT false
);

CREATE TABLE IF NOT EXISTS "bcwat_lic"."wls_water_approval_deanna" (
"gid" integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
"appfileno" text NOT NULL,
"proponent" text NOT NULL,
"podno" text,
"latitude" DOUBLE PRECISION NOT NULL,
"longitude" DOUBLE PRECISION NOT NULL,
"purpose" text,
"sourcetype" text,
"sourcename" text,
"fishpresence" text,
"startdate" date,
"expirationdate" date,
"ms" DOUBLE PRECISION,
"md" DOUBLE PRECISION,
"my" DOUBLE PRECISION,
"geom4326" geometry(Point,4326),
"deanna_id" text,
"quantity" DOUBLE PRECISION,
"quantity_units" text,
"qty_diversion_max_rate" DOUBLE PRECISION,
"qty_units_diversion_max_rate" text,
"approval_status" text DEFAULT 'Current'::text,
CONSTRAINT wls_water_approval_deanna_pkey PRIMARY KEY (gid)
);

CREATE TABLE IF NOT EXISTS "bcwat_lic"."water_management_district_area" (
district_id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
district_name text NOT NULL UNIQUE,
geom4326 geometry(MultiPolygon,4326)
);

CREATE TABLE IF NOT EXISTS "bcwat_lic"."licence_bc_app_land" (
licence_no text NOT NULL,
appurtenant_land text,
related_licences text[],
fa text,
purpose text[],
CONSTRAINT licence_bc_app_land_pkey PRIMARY KEY (licence_no)
);

CREATE TABLE IF NOT EXISTS "bcwat_lic"."bc_water_rights_licences_public"(
wrlp_id text NOT NULL,
licence_no character varying(12) NOT NULL,
tpod_tag character varying(15) NOT NULL,
purpose text NOT NULL,
pcl_no character varying(15),
qty_original double precision,
qty_flag character varying(1),
qty_units character varying(25),
licensee character varying,
lic_status_date date,
priority_date date,
expiry_date date,
longitude double precision,
latitude double precision,
stream_name character varying,
quantity_day_m3 double precision,
quantity_sec_m3 double precision,
quantity_ann_m3 double precision,
lic_status text,
rediversion_flag character varying(1),
flag_desc character varying(100),
file_no character varying(10),
water_allocation_type character varying(2) NOT NULL,
geom4326 geometry(Point,4326),
water_source_type_desc text,
hydraulic_connectivity character varying(215),
well_tag_number double precision,
related_licences text[],
industry_activity text NOT NULL,
purpose_groups text NOT NULL,
is_consumptive boolean NOT NULL,
ann_adjust double precision,
pod_diversion_type text,
qty_diversion_max_rate DOUBLE PRECISION,
qty_units_diversion_max_rate character varying,
puc_groupings_storage text,
CONSTRAINT wls_wrl_pkey PRIMARY KEY (wrlp_id),
CONSTRAINT wls_wrl_4_unique UNIQUE (licence_no, tpod_tag, purpose, pcl_no)
);

CREATE TABLE IF NOT EXISTS "bcwat_lic"."bc_water_rights_applications_public"
(
wrap_id text NOT NULL,
licence_no character varying(40) NOT NULL,
tpod_tag character varying(10) NOT NULL,
purpose text NOT NULL,
water_allocation_type text NOT NULL,
file_no character varying(10),
lic_status character varying(50),
well_tag_number double precision,
qty_diversion_max_rate double precision,
qty_units_diversion_max_rate character varying(25),
licensee character varying NOT NULL,
latitude double precision NOT NULL,
longitude double precision NOT NULL,
district_precinct_name character varying(100),
geom4326 geometry(Point,4326) NOT NULL,
industry_activity text NOT NULL,
purpose_groups text NOT NULL,
is_consumptive boolean NOT NULL,
pod_diversion_type text,
puc_groupings_storage text,
CONSTRAINT bc_wls_wra_pkey PRIMARY KEY (wrap_id)
);

-- COMMENTS --

COMMENT ON SCHEMA "bcwat_lic" IS 'The full name of this schema is bcwat_licence. This is where all the DataBC water licencing data gets scraped to and served to the frontend.';

-- FOREIGN KEYS --

ALTER TABLE "bcwat_lic"."lake_licence" ADD CONSTRAINT "lake_licence_waterbody_poly_id_fkey" FOREIGN KEY ("waterbody_poly_id") REFERENCES "bcwat_ws"."lake" ("waterbody_poly_id");

-- VIEWS --

CREATE OR REPLACE VIEW bcwat_lic.licence_wls_map
AS
SELECT 'BC'::text AS province,
    bc_wls_wrl_wra.licence_no,
    bc_wls_wrl_wra.tpod_tag,
        CASE
            WHEN char_length(bc_wls_wrl_wra.licensee::text) > 60 THEN concat("substring"(bc_wls_wrl_wra.licensee::text, 1, 57), '...')
            ELSE bc_wls_wrl_wra.licensee::text
        END AS licensee,
    bc_wls_wrl_wra.lic_status_date,
    bc_wls_wrl_wra.priority_date,
    bc_wls_wrl_wra.expiry_date,
    bc_wls_wrl_wra.longitude,
    bc_wls_wrl_wra.latitude,
        CASE
            WHEN bc_wls_wrl_wra.purpose::character varying IS NULL OR bc_wls_wrl_wra.purpose::character varying::text = ''::character varying::text THEN 'N/A'::character varying
            ELSE bc_wls_wrl_wra.purpose::character varying
        END AS purpose,
        CASE
            WHEN bc_wls_wrl_wra.stream_name IS NULL OR (bc_wls_wrl_wra.stream_name::text = ANY (ARRAY[''::text, 'unnamed'::text, 'Unnamed'::text])) THEN 'Unknown'::character varying
            ELSE bc_wls_wrl_wra.stream_name
        END AS stream_name,
    bc_wls_wrl_wra.quantity_ann_m3,
    bc_wls_wrl_wra.quantity_day_m3,
    bc_wls_wrl_wra.quantity_sec_m3,
    bc_wls_wrl_wra.lic_status::character varying AS lic_status,
    bc_wls_wrl_wra.rediversion_flag,
        CASE
            WHEN bc_wls_wrl_wra.qty_flag IS NULL THEN 'N/A'::text::character varying
            ELSE bc_wls_wrl_wra.qty_flag
        END AS qty_flag,
    bc_wls_wrl_wra.flag_desc,
    bc_wls_wrl_wra.file_no,
    'BC Ministry of Forests'::text AS branding_organization,
    'BC Water Sustainability Act'::text AS doc_type,
    'long'::text AS licence_term,
    bc_wls_wrl_wra.water_allocation_type::text AS water_allocation_type,
        CASE
            WHEN bc_wls_wrl_wra.industry_activity IS NULL THEN 'Other'::text
            ELSE bc_wls_wrl_wra.industry_activity
        END AS industry_activity,
    bc_wls_wrl_wra.wls_wrl_wra_id AS wls_id,
    bc_wls_wrl_wra.geom4326,
    bc_wls_wrl_wra.related_licences,
    bc_wls_wrl_wra.water_source_type_desc,
        CASE
            WHEN bc_wls_wrl_wra.water_allocation_type::text = 'SW'::text THEN NULL::text::character varying
            ELSE bc_wls_wrl_wra.hydraulic_connectivity
        END AS hydraulic_connectivity,
        CASE
            WHEN bc_wls_wrl_wra.water_allocation_type::text = 'SW'::text THEN NULL::integer
            ELSE bc_wls_wrl_wra.well_tag_number::integer
        END AS well_tag_number,
    bc_wls_wrl_wra.quantity_ann_m3 AS ann_adjust,
        CASE
            WHEN bc_wls_wrl_wra.purpose_groups IS NULL THEN 'Other'::text
            ELSE bc_wls_wrl_wra.purpose_groups
        END AS purpose_groups,
        CASE
            WHEN bc_wls_wrl_wra.is_consumptive IS NULL THEN true
            ELSE bc_wls_wrl_wra.is_consumptive
        END AS is_consumptive
FROM bcwat_lic.bc_wls_wrl_wra bc_wls_wrl_wra
UNION ALL
SELECT 'BC'::text AS province,
    concat('App ID: ', licence_ogc_short_term_approval.short_term_water_use_num) AS licence_no,
    licence_ogc_short_term_approval.pod_number AS tpod_tag,
    licence_ogc_short_term_approval.proponent AS licensee,
    licence_ogc_short_term_approval.approved_start_date AS lic_status_date,
    NULL::date AS priority_date,
    licence_ogc_short_term_approval.approved_end_date AS expiry_date,
    st_x(licence_ogc_short_term_approval.geom4326) AS longitude,
    st_y(licence_ogc_short_term_approval.geom4326) AS latitude,
        CASE
            WHEN licence_ogc_short_term_approval.purpose_desc IS NULL THEN 'N/A'::character varying
            ELSE licence_ogc_short_term_approval.purpose_desc
        END AS purpose,
        CASE
            WHEN licence_ogc_short_term_approval.water_source_name IS NULL OR licence_ogc_short_term_approval.water_source_name::text = ''::text THEN 'Unknown'::character varying
            ELSE licence_ogc_short_term_approval.water_source_name
        END AS stream_name,
    licence_ogc_short_term_approval.approved_total_volume::double precision AS quantity_ann_m3,
    licence_ogc_short_term_approval.approved_volume_per_day::double precision AS quantity_day_m3,
    NULL::double precision AS quantity_sec_m3,
        CASE
            WHEN licence_ogc_short_term_approval.status::text = 'Active'::text THEN 'CURRENT'::text
            ELSE NULL::text
        END AS lic_status,
    'N/A'::text AS rediversion_flag,
    'N/A'::text AS qty_flag,
    'N/A'::text AS flag_desc,
    licence_ogc_short_term_approval.short_term_water_use_num AS file_no,
        CASE
            WHEN licence_ogc_short_term_approval.authority_type::text = 'CER'::text THEN 'Canada Energy Regulator'::text
            WHEN licence_ogc_short_term_approval.authority_type::text = 'NEB'::text THEN 'National Energy Board'::text
            WHEN licence_ogc_short_term_approval.authority_type::text = 'OGAA'::text THEN 'Oil and Gas Activities Act'::text
            WHEN licence_ogc_short_term_approval.authority_type::text = 'GRA'::text THEN 'Geothermal Resources Act'::text
            ELSE licence_ogc_short_term_approval.authority_type::text
        END AS branding_organization,
    'BC Water Sustainability Act'::text AS doc_type,
    'short'::text AS licence_term,
        CASE
            WHEN licence_ogc_short_term_approval.water_source_type::text = ANY (ARRAY['WSD'::character varying::text, 'WELL'::character varying::text]) THEN 'GW'::text
            ELSE 'SW'::text
        END AS water_allocation_type,
    'Oil & Gas'::text AS industry_activity,
    licence_ogc_short_term_approval.short_term_approval_id AS wls_id,
    licence_ogc_short_term_approval.geom4326,
    NULL::text[] AS related_licences,
    licence_ogc_short_term_approval.water_source_type_desc,
    NULL::character varying AS hydraulic_connectivity,
    NULL::integer AS well_tag_number,
    licence_ogc_short_term_approval.approved_total_volume AS ann_adjust,
    'Oil & Gas'::text AS purpose_groups,
    licence_ogc_short_term_approval.is_consumptive
FROM bcwat_lic.licence_ogc_short_term_approval
WHERE licence_ogc_short_term_approval.approved_end_date > now() OR licence_ogc_short_term_approval.approved_start_date >= now()
UNION ALL
SELECT 'BC'::text AS province,
    concat('File No: ', bc_wls_water_approval.approval_file_number) AS licence_no,
    'N/A'::text AS tpod_tag,
    'N/A'::text AS licensee,
    bc_wls_water_approval.approval_start_date AS lic_status_date,
    NULL::date AS priority_date,
    bc_wls_water_approval.approval_expiry_date AS expiry_date,
    st_x(bc_wls_water_approval.geom4326) AS longitude,
    st_y(bc_wls_water_approval.geom4326) AS latitude,
        CASE
            WHEN bc_wls_water_approval.works_description IS NULL THEN 'N/A'::text
            ELSE bc_wls_water_approval.works_description
        END AS purpose,
        CASE
            WHEN bc_wls_water_approval.source IS NULL OR (bc_wls_water_approval.source = ANY (ARRAY[''::text, 'unnamed'::text, 'Unnamed'::text])) THEN 'Unknown'::text
            ELSE bc_wls_water_approval.source
        END AS stream_name,
        CASE
            WHEN bc_wls_water_approval.quantity_units = 'm3/year'::text THEN bc_wls_water_approval.quantity
            WHEN bc_wls_water_approval.quantity_units = 'm3/day'::text THEN bc_wls_water_approval.quantity * 365.25::double precision
            WHEN bc_wls_water_approval.quantity_units = 'm3/sec'::text THEN bc_wls_water_approval.quantity * 60::double precision * 60::double precision * 24::double precision * 365.25::double precision
            ELSE NULL::double precision
        END AS quantity_ann_m3,
        CASE
            WHEN bc_wls_water_approval.quantity_units = 'm3/day'::text THEN bc_wls_water_approval.quantity
            ELSE NULL::double precision
        END AS quantity_day_m3,
        CASE
            WHEN bc_wls_water_approval.quantity_units = 'm3/sec'::text THEN bc_wls_water_approval.quantity
            ELSE NULL::double precision
        END AS quantity_sec_m3,
    'CURRENT'::text AS lic_status,
    'N/A'::character varying AS rediversion_flag,
    'N/A'::character varying AS qty_flag,
    'N/A'::character varying AS flag_desc,
    bc_wls_water_approval.approval_file_number AS file_no,
    'BC Ministry of Forests'::text AS branding_organization,
    'BC Water Sustainability Act'::text AS doc_type,
    'short'::text AS licence_term,
    'SW'::text AS water_allocation_type,
    'Commercial'::text AS industry_activity,
    bc_wls_water_approval.bc_wls_water_approval_id AS wls_id,
    bc_wls_water_approval.geom4326,
    NULL::text[] AS related_licences,
    'Unknown source'::text::character varying AS water_source_type_desc,
    NULL::character varying(215) AS hydraulic_connectivity,
    NULL::integer AS well_tag_number,
        CASE
            WHEN bc_wls_water_approval.quantity_units = 'm3/year'::text THEN bc_wls_water_approval.quantity
            WHEN bc_wls_water_approval.quantity_units = 'm3/day'::text THEN bc_wls_water_approval.quantity * 365.25::double precision
            WHEN bc_wls_water_approval.quantity_units = 'm3/sec'::text THEN bc_wls_water_approval.quantity * 60::double precision * 60::double precision * 24::double precision * 365.25::double precision
            ELSE NULL::double precision
        END AS ann_adjust,
    'Commercial'::text AS purpose_groups,
    true AS is_consumptive
FROM bcwat_lic.bc_wls_water_approval
WHERE bc_wls_water_approval.approval_expiry_date > now() OR bc_wls_water_approval.approval_start_date >= now();
